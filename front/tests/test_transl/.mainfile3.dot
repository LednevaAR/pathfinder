digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x1e1c8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%0:\l  %1 = alloca i32, align 4\l  br label %2\l}"];
	Node0x1e1c8b0 -> Node0x1e1d010;
	Node0x1e1d010 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l2:                                                \l  %3 = alloca i32, align 4\l  br label %4\l}"];
	Node0x1e1d010 -> Node0x1e1d170;
	Node0x1e1d170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l4:                                                \l  store i32 0, i32* %1, align 4\l  br label %5\l}"];
	Node0x1e1d170 -> Node0x1e1d280;
	Node0x1e1d280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%5:\l5:                                                \l  br label %6\l}"];
	Node0x1e1d280 -> Node0x1e1d340;
	Node0x1e1d340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l6:                                                \l  %7 = call i32 (i8*, ...) @__isoc99_scanf(i8* noundef getelementptr inbounds\l... ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* noundef %3)\l  br label %8\l}"];
	Node0x1e1d340 -> Node0x1e1d7e0;
	Node0x1e1d7e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l8:                                                \l  %9 = icmp eq i32 %7, 1\l  br label %10\l}"];
	Node0x1e1d7e0 -> Node0x1e1d230;
	Node0x1e1d230 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%10:\l10:                                               \l  br i1 %9, label %11, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1e1d230:s0 -> Node0x1e1d950;
	Node0x1e1d230:s1 -> Node0x1e1d9a0;
	Node0x1e1d950 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%11:\l11:                                               \l  %12 = load i32, i32* %3, align 4\l  br label %13\l}"];
	Node0x1e1d950 -> Node0x1e1db50;
	Node0x1e1db50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%13:\l13:                                               \l  %14 = call i32 @factorial(i32 noundef %12)\l  br label %15\l}"];
	Node0x1e1db50 -> 	Node0x1e1f030 [style = dotted];
	Node0x1e1db50 -> Node0x1e1dd90;
	Node0x1e1dd90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%15:\l15:                                               \l  %16 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([4 x\l... i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 noundef %14)\l  br label %17\l}"];
	Node0x1e1dd90 -> Node0x1e1e110;
	Node0x1e1e110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%17:\l17:                                               \l  br label %6, !llvm.loop !6\l}"];
	Node0x1e1e110 -> Node0x1e1d340;
	Node0x1e1d9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%18:\l18:                                               \l  ret i32 0\l}"];
	subgraph cluster_factorial {
		label = "CFG for 'factorial' function";
		graph[style=filled, bgcolor=white];
	
		Node0x1e1f030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = alloca i32, align 4\l  br label %3\l}"];
		Node0x1e1f030 -> Node0x1e1f0f0;
		Node0x1e1f0f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l3:                                                \l  store i32 %0, i32* %2, align 4\l  br label %4\l}"];
		Node0x1e1f0f0 -> Node0x1e1f1b0;
		Node0x1e1f1b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l4:                                                \l  %5 = load i32, i32* %2, align 4\l  br label %6\l}"];
		Node0x1e1f1b0 -> Node0x1e1f330;
		Node0x1e1f330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%6:\l6:                                                \l  %7 = icmp slt i32 %5, 2\l  br label %8\l}"];
		Node0x1e1f330 -> Node0x1e1f480;
		Node0x1e1f480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l8:                                                \l  br i1 %7, label %9, label %10\l|{<s0>T|<s1>F}}"];
		Node0x1e1f480:s0 -> Node0x1e1f270;
		Node0x1e1f480:s1 -> Node0x1e1f5d0;
		Node0x1e1f270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%9:\l9:                                                \l  br label %21\l}"];
		Node0x1e1f270 -> Node0x1e1f710;
		Node0x1e1f5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%10:\l10:                                               \l  %11 = load i32, i32* %2, align 4\l  br label %12\l}"];
		Node0x1e1f5d0 -> Node0x1e1f840;
		Node0x1e1f840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%12:\l12:                                               \l  %13 = load i32, i32* %2, align 4\l  br label %14\l}"];
		Node0x1e1f840 -> Node0x1e1f970;
		Node0x1e1f970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%14:\l14:                                               \l  %15 = sub nsw i32 %13, 1\l  br label %16\l}"];
		Node0x1e1f970 -> Node0x1e1fac0;
		Node0x1e1fac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%16:\l16:                                               \l  %17 = call i32 @factorial(i32 noundef %15)\l  br label %18\l}"];
		Node0x1e1fac0 -> 	Node0x1e1f030 [style = dotted];
		Node0x1e1fac0 -> Node0x1e1fc70;
		Node0x1e1fc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%18:\l18:                                               \l  %19 = mul nsw i32 %11, %17\l  br label %20\l}"];
		Node0x1e1fc70 -> Node0x1e1fd30;
		Node0x1e1fd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%20:\l20:                                               \l  br label %21\l}"];
		Node0x1e1fd30 -> Node0x1e1f710;
		Node0x1e1f710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  %22 = phi i32 [ 1, %9 ], [ %19, %20 ]\l  br label %23\l}"];
		Node0x1e1f710 -> Node0x1e1feb0;
		Node0x1e1feb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%23:\l23:                                               \l  ret i32 %22\l}"];
	}
}
