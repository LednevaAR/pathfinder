digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Nodebeginmain [shape=record, label="BEGIN"];
	Nodebeginmain -> Node0x848ef0 [label="z"];
	Node0x848ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%0:\l  %1 = alloca [128 x i32], align 16\l  br label %2\l}"];
	Node0x848ef0 -> Node0x849c60 [label="z"];
	Node0x849c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l2:                                                \l  %3 = alloca i32*, align 8\l  br label %4\l}"];
	Node0x849c60 -> Node0x849dc0 [label="z"];
	Node0x849dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l4:                                                \l  %5 = alloca i32*, align 8\l  br label %6\l}"];
	Node0x849dc0 -> Node0x849f40 [label="z"];
	Node0x849f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l6:                                                \l  %7 = alloca i64, align 8\l  br label %8\l}"];
	Node0x849f40 -> Node0x84a070 [label="z"];
	Node0x84a070 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%8:\l8:                                                \l  %9 = getelementptr inbounds [128 x i32], [128 x i32]* %1, i64 0, i64 0\l  br label %10\l}"];
	Node0x84a070 -> Node0x849e80 [label="d"];
	Node0x849e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%10:\l10:                                               \l  %11 = getelementptr inbounds i32, i32* %9, i64 1\l  br label %12\l}"];
	Node0x849e80 -> Node0x84a330 [label="f"];
	Node0x84a330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%12:\l12:                                               \l  store i32* %11, i32** %3, align 8\l  br label %13\l}"];
	Node0x84a330 -> Node0x84a3f0 [label="z"];
	Node0x84a3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%13:\l13:                                               \l  %14 = getelementptr inbounds [128 x i32], [128 x i32]* %1, i64 0, i64 0\l  br label %15\l}"];
	Node0x84a3f0 -> Node0x84a570 [label="f"];
	Node0x84a570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%15:\l15:                                               \l  store i32* %14, i32** %5, align 8\l  br label %16\l}"];
	Node0x84a570 -> Node0x84a630 [label="z"];
	Node0x84a630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%16:\l16:                                               \l  store i64 0, i64* %7, align 8\l  br label %17\l}"];
	Node0x84a630 -> Node0x84a6f0 [label="z"];
	Node0x84a6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%17:\l17:                                               \l  br label %18\l}"];
	Node0x84a6f0 -> Node0x84a7b0 [label="z"];
	Node0x84a7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18:\l18:                                               \l  %19 = load i64, i64* %7, align 8\l  br label %20\l}"];
	Node0x84a7b0 -> Node0x84a8e0 [label="z"];
	Node0x84a8e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%20:\l20:                                               \l  %21 = icmp ult i64 %19, 64\l  br label %22\l}"];
	Node0x84a8e0 -> Node0x84a9d0 [label="c"];
	Node0x84a9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%22:\l22:                                               \l  br i1 %21, label %23, label %47\l|{<s0>T|<s1>F}}"];
	Node0x84a9d0 -> Node0x84aa90 [label="k"];
	Node0x84a9d0 -> Node0x84aae0 [label="k"];
	Node0x84aa90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%23:\l23:                                               \l  %24 = load i32*, i32** %5, align 8\l  br label %25\l}"];
	Node0x84aa90 -> Node0x84ac90 [label="z"];
	Node0x84ac90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%25:\l25:                                               \l  %26 = load i64, i64* %7, align 8\l  br label %27\l}"];
	Node0x84ac90 -> Node0x84adc0 [label="z"];
	Node0x84adc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%27:\l27:                                               \l  %28 = getelementptr inbounds i32, i32* %24, i64 %26\l  br label %29\l}"];
	Node0x84adc0 -> Node0x84af20 [label="n"];
	Node0x84af20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%29:\l29:                                               \l  %30 = load i32, i32* %28, align 4\l  br label %31\l}"];
	Node0x84af20 -> Node0x84b050 [label="z"];
	Node0x84b050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%31:\l31:                                               \l  %32 = add nsw i32 %30, 1\l  br label %33\l}"];
	Node0x84b050 -> Node0x84b320 [label="z"];
	Node0x84b320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%33:\l33:                                               \l  %34 = load i32*, i32** %3, align 8\l  br label %35\l}"];
	Node0x84b320 -> Node0x84b450 [label="z"];
	Node0x84b450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%35:\l35:                                               \l  %36 = load i64, i64* %7, align 8\l  br label %37\l}"];
	Node0x84b450 -> Node0x84b580 [label="z"];
	Node0x84b580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds i32, i32* %34, i64 %36\l  br label %39\l}"];
	Node0x84b580 -> Node0x84b6e0 [label="f"];
	Node0x84b6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%39:\l39:                                               \l  store i32 %32, i32* %38, align 4\l  br label %40\l}"];
	Node0x84b6e0 -> Node0x84b7a0 [label="z"];
	Node0x84b7a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%40:\l40:                                               \l  br label %41\l}"];
	Node0x84b7a0 -> Node0x84b860 [label="z"];
	Node0x84b860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%41:\l41:                                               \l  %42 = load i64, i64* %7, align 8\l  br label %43\l}"];
	Node0x84b860 -> Node0x84b990 [label="z"];
	Node0x84b990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%43:\l43:                                               \l  %44 = add i64 %42, 1\l  br label %45\l}"];
	Node0x84b990 -> Node0x84bae0 [label="z"];
	Node0x84bae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%45:\l45:                                               \l  store i64 %44, i64* %7, align 8\l  br label %46\l}"];
	Node0x84bae0 -> Node0x84bc30 [label="z"];
	Node0x84bc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%46:\l46:                                               \l  br label %18, !llvm.loop !6\l}"];
	Node0x84bc30 -> Node0x84a7b0 [label="o"];
	Node0x84aae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%47:\l47:                                               \l  ret void\l}"];
	Node0x84aae0 -> Nodeendmain [label="m"];
	Nodeendmain [shape=record, label="END"];
	Nodebeginmain -> Nodeendmain [label="z"];
}
