digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Nodebeginmain [shape=record, label="BEGIN"];
	Nodebeginmain -> Node0xcd4d20 [label="z"];
	Node0xcd4d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%0:\l  %1 = alloca [128 x i32], align 16\l  br label %2\l}"];
	Node0xcd4d20 -> Node0xcd5a90 [label="z"];
	Node0xcd5a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l2:                                                \l  %3 = alloca i32, align 4\l  br label %4\l}"];
	Node0xcd5a90 -> Node0xcd5bf0 [label="z"];
	Node0xcd5bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%4:\l4:                                                \l  %5 = alloca i32, align 4\l  br label %6\l}"];
	Node0xcd5bf0 -> Node0xcd5d70 [label="z"];
	Node0xcd5d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%6:\l6:                                                \l  store i32 0, i32* %3, align 4\l  br label %7\l}"];
	Node0xcd5d70 -> Node0xcd5e30 [label="z"];
	Node0xcd5e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%7:\l7:                                                \l  store i32 0, i32* %5, align 4\l  br label %8\l}"];
	Node0xcd5e30 -> Node0xcd5ef0 [label="z"];
	Node0xcd5ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%8:\l8:                                                \l  br label %9\l}"];
	Node0xcd5ef0 -> Node0xcd5cb0 [label="z"];
	Node0xcd5cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l9:                                                \l  %10 = load i32, i32* %5, align 4\l  br label %11\l}"];
	Node0xcd5cb0 -> Node0xcd6090 [label="z"];
	Node0xcd6090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = icmp slt i32 %10, 128\l  br label %13\l}"];
	Node0xcd6090 -> Node0xcd6180 [label="c"];
	Node0xcd6180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%13:\l13:                                               \l  br i1 %12, label %14, label %34\l|{<s0>T|<s1>F}}"];
	Node0xcd6180 -> Node0xcd6240 [label="k"];
	Node0xcd6180 -> Node0xcd6290 [label="k"];
	Node0xcd6240 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%14:\l14:                                               \l  %15 = load i32, i32* %5, align 4\l  br label %16\l}"];
	Node0xcd6240 -> Node0xcd6440 [label="z"];
	Node0xcd6440 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%16:\l16:                                               \l  %17 = sext i32 %15 to i64\l  br label %18\l}"];
	Node0xcd6440 -> Node0xcd6570 [label="z"];
	Node0xcd6570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%18:\l18:                                               \l  %19 = getelementptr inbounds [128 x i32], [128 x i32]* %1, i64 0, i64 %17\l  br label %20\l}"];
	Node0xcd6570 -> Node0xcd6720 [label="n"];
	Node0xcd6720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%20:\l20:                                               \l  %21 = load i32, i32* %19, align 4\l  br label %22\l}"];
	Node0xcd6720 -> Node0xcd6850 [label="z"];
	Node0xcd6850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%22:\l22:                                               \l  %23 = load i32, i32* %3, align 4\l  br label %24\l}"];
	Node0xcd6850 -> Node0xcd6980 [label="z"];
	Node0xcd6980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%24:\l24:                                               \l  %25 = add nsw i32 %23, %21\l  br label %26\l}"];
	Node0xcd6980 -> Node0xcd6a40 [label="z"];
	Node0xcd6a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%26:\l26:                                               \l  store i32 %25, i32* %3, align 4\l  br label %27\l}"];
	Node0xcd6a40 -> Node0xcd6b00 [label="z"];
	Node0xcd6b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%27:\l27:                                               \l  br label %28\l}"];
	Node0xcd6b00 -> Node0xcd6bc0 [label="z"];
	Node0xcd6bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%28:\l28:                                               \l  %29 = load i32, i32* %5, align 4\l  br label %30\l}"];
	Node0xcd6bc0 -> Node0xcd6cf0 [label="z"];
	Node0xcd6cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%30:\l30:                                               \l  %31 = add nsw i32 %29, 1\l  br label %32\l}"];
	Node0xcd6cf0 -> Node0xcd6db0 [label="z"];
	Node0xcd6db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%32:\l32:                                               \l  store i32 %31, i32* %5, align 4\l  br label %33\l}"];
	Node0xcd6db0 -> Node0xcd7110 [label="z"];
	Node0xcd7110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%33:\l33:                                               \l  br label %9, !llvm.loop !6\l}"];
	Node0xcd7110 -> Node0xcd5cb0 [label="o"];
	Node0xcd6290 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%34:\l34:                                               \l  ret void\l}"];
	Node0xcd6290 -> Nodeendmain [label="m"];
	Nodeendmain [shape=record, label="END"];
	Nodebeginmain -> Nodeendmain [label="z"];
}
